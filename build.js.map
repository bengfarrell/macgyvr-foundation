{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/macgyvr/src/baseapplication.js","node_modules/macgyvr/src/basegroup.js","node_modules/macgyvr/src/plugins/input/daydream.js","node_modules/macgyvr/src/plugins/input/gaze.js","node_modules/macgyvr/src/plugins/tween.js","node_modules/macgyvr/src/utils/color.js","src/main.js","src/objects/cube.js","src/objects/dome.js","src/objects/testscene.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export default class BaseApplication {\n    constructor(scene) {\n        scene.registerApplication(this);\n    }\n\n    onCreate(scene, scenecollection) {}\n    onPreRender(time) {}\n    onRender(time) {}\n}\n","export default class BaseGroup {\n    constructor(params) {\n\n        /**\n         * parent group of child objects we will create\n         * @type {THREE.Object3D}\n         * @private\n         */\n        this._group = new THREE.Object3D();\n\n        /** additional render hooks we can add */\n        this._renderHooks = [];\n\n        this._config = params;\n        this.onInitialize(params);\n    }\n\n    /**\n     * get name of group\n     */\n    get name() {\n        return this.constructor.name;\n    }\n\n    /**\n     * overridable methods\n     * leave empty to be a simple abstraction we don't have to call super on\n     * @param scene\n     */\n    onCreate(scene) {};\n    onRender(scene, time) {};\n    onInitialize(params) {};\n    onAssetsLoaded(geometry, material) {};\n    onJSONSceneLoadProgress(progress) {};\n    onJSONSceneLoadError(err) {};\n    onJSONSceneLoaded(scene) { this.add(scene) };\n\n    /**\n     * on create scene (or earliest possible opportunity)\n     * @param scene\n     */\n    create(scene) {\n        this._group.name = this.name;\n        this._sceneCollection = scene;\n        scene.scene.add(this._group);\n\n        if (this._config && this._config.assets) {\n            // todo: determine when to use JSON Loader, OBJ loader, or whatever\n            var loader = new THREE.JSONLoader();\n            loader.load(this._config.assets, (geometry, materials) => {\n                this.onAssetsLoaded(geometry, materials);\n            });\n        }\n\n        if (this._config && this._config.scene) {\n            var loader = new THREE.ObjectLoader();\n            loader.load(this._config.scene, (loaded) => {\n                this.onJSONSceneLoaded(loaded);\n            }, (progress) => {\n                this.onJSONSceneLoadProgress(progress);\n            }, (err) => {\n                this.onJSONSceneLoadError(err);\n            });\n        }\n\n        this.onCreate();\n    }\n\n    /**\n     * add object to scene\n     * @param object\n     * @param name\n     */\n    add(object, name) {\n        if (!name) {\n            name = this.name + '-child';\n        }\n        object.name = name;\n        this._group.add(object);\n    }\n\n    addRenderHook(method) {\n        this._renderHooks.push(method);\n    }\n\n    /**\n     * get parent group object\n     * @returns {THREE.Object3D}\n     */\n    get group() {\n        return this._group;\n    }\n\n    /**\n     * get scene\n     * @returns {THREE.Object3D}\n     */\n    get sceneCollection() {\n        return this._sceneCollection;\n    }\n\n    /**\n     * get children of this group\n     * @returns {Array}\n     */\n    get children() {\n        return this._group.children;\n    }\n\n    /**\n     * on prerender scene\n     * @param scene\n     */\n    preRender() {}\n\n    /**\n     * on render scene\n     * @param time\n     */\n    render(time) {\n        for (var c = 0; c < this._renderHooks.length; c++) {\n            this._renderHooks[c].apply(this, [time]);\n        }\n        this.onRender(time);\n    }\n}\n","export default class Daydream {\n    constructor() {\n        this.connected = false;\n        this._callbacks = [];\n        this._controller = new DaydreamController();\n        this._controller.onStateChange((state) => this.onControllerUpdate(state));\n        this._sensorfusion = new MadgwickAHRS();\n        this._sensorfusion.setQuaternion( [ 0.7071067811865475, 0, 0, 0.7071067811865475 ] ); // Hack-ish: Rotate internal quaternion\n        this._buttons = {\n            app: false,\n            home: false,\n            click: false,\n            volumePlus: false,\n            volumeMinus: false,\n            xTouch: 0,\n            yTouch: 0\n        };\n    }\n\n    /**\n     * connect and start listening\n     */\n    start() {\n        this._controller.connect();\n        this.connected = true;\n    }\n\n    /**\n     * on controller update\n     * @param state\n     */\n    onControllerUpdate(state) {\n        this._sensorfusion.update(\n            state.xGyro, state.yGyro, state.zGyro,\n            state.xAcc, state.yAcc, state.zAcc,\n            state.xOri, state.yOri, state.zOri\n        );\n\n        var changed = [];\n        if (state.isClickDown !== this._buttons.click) {\n            this._buttons.click = state.isClickDown;\n            changed.push( { 'click': state.isClickDown });\n        }\n\n        if (state.isAppDown !== this._buttons.app) {\n            this._buttons.app = state.isAppDown;\n            changed.push( { 'app': state.isAppDown });\n        }\n\n        if (state.isHomeDown !== this._buttons.home) {\n            this._buttons.home = state.isHomeDown;\n            changed.push( { 'home': state.isHomeDown });\n        }\n\n        if (state.isVolMinusDown !== this._buttons.volumeMinus) {\n            this._buttons.volumeMinus = state.isVolMinusDown;\n            changed.push( { 'volumeMinus': state.isVolMinusDown });\n        }\n\n        if (state.isVolPlusDown !== this._buttons.volumePlus) {\n            this._buttons.volumePlus = state.isVolPlusDown;\n            changed.push( { 'volumePlus': state.isVolPlusDown });\n        }\n\n        if (state.xTouch !== this._buttons.xTouch && state.yTouch !== this._buttons.yTouch) {\n            changed.push( { 'touch': { x: state.xTouch, y: state.yTouch } });\n        }\n\n        if (changed.length > 0) {\n            for (var c = 0; c < this._callbacks.length; c++) {\n                this._callbacks[c].apply(this, [changed, state]);\n            }\n        }\n    }\n\n    /**\n     * get orientation of device\n     */\n    get orientation() {\n        var q = new THREE.Quaternion();\n        var sf = this._sensorfusion.getQuaternion();\n        sf.y -= Math.PI/2;\n        q = q.fromArray(sf);\n        return q;\n    }\n\n    /**\n     * add listener\n     * @param callback\n     */\n    addListener(callback) {\n        this._callbacks.push(callback);\n    }\n\n    /**\n     * detect against possible objects\n     * @param possibleObjects\n     */\n    pointingAt(possibleObjects) {\n        var raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera( new THREE.Vector2(0, 0), this.sceneCollection.camera );\n        var collisions = raycaster.intersectObjects( possibleObjects );\n        return collisions;\n    }\n}\n","export default class GazeInput {\n    constructor(camera) {\n        this._camera = camera;\n        this.connected = false;\n        this._callbacks = [];\n        document.body.addEventListener('mousedown', (e) => this.onClick(e) );\n    }\n\n    /**\n     * connect and start listening\n     */\n    start() {\n        this.connected = true;\n    }\n\n    /**\n     * add listener\n     * @param callback\n     */\n    addListener(callback) {\n        this._callbacks.push(callback);\n    }\n\n    /**\n     * on body click\n     */\n    onClick(event) {\n        for (var c = 0; c < this._callbacks.length; c++) {\n            this._callbacks[c].apply(this);\n        }\n    }\n\n    /**\n     * get orientation of device\n     */\n    get orientation() {\n        return this._camera.quaternion;\n    }\n\n    /**\n     * detect against possible objects\n     * @param possibleObjects\n     */\n    pointingAt(possibleObjects) {\n        var raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera( new THREE.Vector2(0, 0), this._camera );\n        var collisions = raycaster.intersectObjects( possibleObjects );\n        return collisions;\n    }\n}\n","import Color from '../utils/color.js';\n\nexport default class Tween {\n    constructor(group) {\n        if (!createjs) {\n            throw new Error('CreateJS Tween must be included in your build or linked via script to animate');\n            return;\n        }\n        group.addRenderHook( (scene, time) => this.onRender(scene, time));\n        this.animations = [];\n    }\n\n    /**\n     * animate THREE.js mesh position property\n     * @param {int} from\n     * @param {int} to\n     * @param options\n     */\n    animateColor(from, to, options) {\n        if (typeof from !== 'object') {\n            if (typeof from !== 'number' && from.charAt(0) === '#') {\n                from = Number('0x' + from.substr(1, from.length));\n                from = Color.decToRGB(from);\n            } else {\n                from = Color.decToRGB(from);\n            }\n        }\n\n        if (typeof to !== 'object') {\n            if (typeof to !== 'number' && to.charAt(0) === '#') {\n                to = Number('0x' + to.substr(1, to.length));\n                to = Color.decToRGB(to);\n            } else {\n                to = Color.decToRGB(to);\n            }\n        }\n\n        from = this.populateStartAnimationObject(from, options);\n        from.animation.step.push( (step) => this.animateColorStep(step));\n        this.createTween(to, from, options);\n        this.animations.push(from);\n    }\n\n    /**\n     * animate THREE.js mesh position property\n     * @param {Three.js Vector3} from\n     * @param {Three.js Vector3} to\n     * @param options\n     */\n    animatePosition(from, to, options) {\n        from = { x: from.x, y: from.y, z: from.z };\n        to = { x: to.x, y: to.y, z: to.z };\n        from = this.populateStartAnimationObject(from, options);\n        from.animation.step.push( (step) => this.animatePositionStep(step));\n        this.createTween(to, from, options);\n        this.animations.push(from);\n    }\n\n    /**\n     * create and start animation\n     * @param from\n     * @param to\n     * @param options\n     */\n    animate(from, to, options) {\n        if (!createjs) {\n            throw new Error('CreateJS Tween must be included in your build or linked via script to animate');\n            return;\n        }\n\n        if (!options.step) {\n            throw new Error('Please define a \"step\" property on options to specify a callback for each animation update');\n        }\n\n        from = this.populateStartAnimationObject(from, to);\n        this.createTween(to, from, options);\n        this.animations.push(from);\n    }\n\n    /**\n     * populate animation start object\n     * @param from\n     * @param options\n     * @returns {*}\n     */\n    populateStartAnimationObject(from, options) {\n        from.animation = {};\n        from.animation.animating = true;\n        from.animation.step = [];\n        if (options.step) {\n            from.animation.step.push(options.step);\n        }\n        from.animation.target = options.target;\n        from.animation.loop = options.loop;\n        from.animation.complete = options.complete;\n        return from;\n    }\n\n    /**\n     * create tween\n     * @param to\n     * @param from\n     * @param options\n     * @returns {Tween}\n     */\n    createTween(to, from, options) {\n        createjs.Tween.get(from, options)\n            .to(to, options.duration)\n            .call( function() {\n                if (!this._loop) {\n                    this.animation.animating = false;\n                }\n                if (this.animation.complete) {\n                    this.animation.complete.apply(this, [this]);\n                }\n            });\n    }\n\n    /**\n     * animate step for Three.JS position\n     * @param step\n     */\n    animatePositionStep(step) {\n        step.animation.target.position.set(step.x, step.y, step.z);\n    }\n\n    /**\n     * animate step for Three.JS material color\n     * @param step\n     */\n    animateColorStep(step) {\n        step.animation.target.material.color.setRGB(step.r/255, step.g/255, step.b/255);\n    }\n\n    /**\n     * animate render hook\n     * @param time\n     * @param scene\n     */\n    onRender(scene, time) {\n        var running = [];\n        for (var c = 0; c < this.animations.length; c++) {\n            if (this.animations[c].animation.animating) {\n                running.push(this.animations[c]);\n                for (var d = 0; d < this.animations[c].animation.step.length; d++) {\n                    this.animations[c].animation.step[d].apply(this, [this.animations[c]]);\n                }\n            }\n        }\n        this.animations = running;\n    }\n}\n","export default {\n    /**\n     * turn decimal color to RGB\n     * @param dec\n     * @returns {{r: number, g: number, b: number}}\n     */\n    decToRGB(dec) {\n        var r = (dec >> 16) & 0xff;\n        var g = (dec >> 8)  & 0xff;\n        var b = dec & 0xff;\n        return { r: r, g: g, b: b };\n    },\n\n    RGBToDec(rgb) {\n        return rgb.r << 16 + rgb.g << 16 + rgb.b;\n    }\n}\n","import BaseApplication from '../node_modules/macgyvr/src/baseapplication.js';\nimport Cube from './objects/cube.js';\nimport Dome from './objects/dome.js';\nimport TestScene from './objects/testscene.js';\nimport DaydreamInput from '../node_modules/macgyvr/src/plugins/input/daydream.js';\nimport GazeInput from '../node_modules/macgyvr/src/plugins/input/gaze.js';\n\nexport default class Main extends BaseApplication {\n    onCreate(scene, scenecollection) {\n        this._sceneCollection = scenecollection;\n\n        /**\n         * Daydream controller\n         */\n        /*this._sceneCollection.input = new DaydreamInput();\n        document.querySelector('.connect-button').addEventListener('click', e => {\n            e.target.remove();\n            this._sceneCollection.input.start();\n        });*/\n\n        /**\n         * Gaze Input\n         */\n        //this._sceneCollection.input = new GazeInput(scenecollection.camera);\n        //this._sceneCollection.input.start();\n\n        scene.addObjects([\n            new Dome(),\n            new Cube(),\n            new TestScene({ scene: './src/assets/tempscene.json' })\n        ]);\n    }\n\n    onRender(time) {}\n}\n","import BaseGroup from '../../node_modules/macgyvr/src/basegroup.js';\nimport Tween from '../../node_modules/macgyvr/src/plugins/tween.js';\n\nexport default class Cube extends BaseGroup {\n    /**\n     * on create scene (or earliest possible opportunity)\n     * @param scene\n     */\n    onCreate() {\n        this._material = this.createMaterial();\n        this._mesh = new THREE.Mesh(this.createGeometry(), this._material);\n        this.add(this._mesh, 'cube');\n        this.group.position.z = -20;\n        this.tweener = new Tween(this);\n        //this.input = new GazeInput(this.sceneCollection, [this._mesh]);\n        //this.input.addListener( (objects) => this.onGazeInput(objects));\n        //this.sceneCollection.input.addListener( (changed, state) => this.onInput(changed, state));\n    }\n\n    /**\n     * on object click event\n     * @param collisions\n     */\n    onInput() {\n        var pointingAt = this.sceneCollection.input.pointingAt([this._mesh]);\n        if (pointingAt.length > 0 && pointingAt[0].object === this._mesh) {\n            var props = {\n                target: this._mesh,\n                duration: 3000\n            };\n            this.tweener.animateColor( 0xff0000, 0x00ff00, props );\n            this.tweener.animatePosition( new THREE.Vector3(0,0,0), new THREE.Vector3(10,6,3), props );\n        }\n    }\n\n    /**\n     * on day dream input\n     * @param changed\n     * @param state\n     */\n    onDayDreamInput(changed, state) {}\n\n    /**\n     * on render\n     * @param time\n     */\n    onRender(time) {\n        this.group.rotation.y += .01;\n    }\n\n    /**\n     * create globe geometry\n     * @returns {THREE.IcosahedronGeometry}\n     */\n    createGeometry() {\n        return new THREE.CubeGeometry(5, 5, 5, 10, 10);\n    }\n\n    /**\n     * create globe material\n     */\n    createMaterial() {\n        return new THREE.MeshPhongMaterial({\n            color      :  0xff0000,\n            shininess  :  10,\n            shading    :  THREE.FlatShading,\n            transparent: true,\n            opacity    : 1\n        });\n    }\n}\n","import BaseGroup from '../../node_modules/macgyvr/src/basegroup.js';\n\nexport default class Dome extends BaseGroup {\n    /**\n     * on create scene (or earliest possible opportunity)\n     */\n    onCreate() {\n        this._material = this.createMaterial();\n        this._coloredFace = 0;\n        this._mesh = new THREE.Mesh(this.createGeometry(), this._material);\n\n        // hack because for some reason, the set color is different when setting each face than the original material\n        for (var c = 0; c < this._mesh.geometry.faces.length; c++) {\n            this._mesh.geometry.faces[c].color.set(0xc1c489);\n        }\n        this.add(this._mesh, 'dome');\n    }\n\n    /**\n     * on render\n     * @param time\n     */\n    onRender(time) {\n        /*if (this.sceneCollection.input.connected) {\n            var direction = new THREE.Vector3( 0, 0, -1).applyQuaternion( this.sceneCollection.input.orientation );\n            var raycaster = new THREE.Raycaster();\n            raycaster.set( this.sceneCollection.camera.position, direction );\n            var collisions = raycaster.intersectObjects( [this._mesh] );\n            if (collisions.length > 0) {\n                this._mesh.geometry.faces[this._coloredFace].color.set(0xc1c489);\n                this._coloredFace = collisions[0].faceIndex;\n                this._mesh.geometry.faces[this._coloredFace].color.set(0xff9145);\n                this._mesh.geometry.colorsNeedUpdate = true;\n            }\n        }*/\n    }\n\n    onInput() {\n\n    }\n\n    /**\n     * create globe geometry\n     * @returns {THREE.IcosahedronGeometry}\n     */\n    createGeometry() {\n        return new THREE.IcosahedronGeometry( 800, 2 );\n    }\n\n    /**\n     * create globe material\n     */\n    createMaterial() {\n        return new THREE.MeshPhongMaterial({\n            color      :  0xc1c489,\n            vertexColors: THREE.FaceColors,\n            side       :  THREE.BackSide,\n            shininess  :  10,\n            shading    :  THREE.FlatShading\n        });\n    }\n}\n","import BaseGroup from '../../node_modules/macgyvr/src/basegroup.js';\n\nexport default class TestScene extends BaseGroup {\n    /**\n     * on create scene (or earliest possible opportunity)\n     */\n    onCreate() {\n    }\n\n    onJSONSceneLoaded(scene) {\n        super.onJSONSceneLoaded(scene);\n        this._cube = scene.getObjectByName('Box 1');\n        this._sphere = scene.getObjectByName('Sphere 2');\n    };\n\n    /**\n     * on render\n     * @param time\n     */\n    onRender(time) {\n    }\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}